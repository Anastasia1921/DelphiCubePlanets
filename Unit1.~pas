unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, OpenGL;

type
  TForm1 = class(TForm)
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormPaint(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
implementation

{$R *.dfm}

procedure TForm1.FormCreate(Sender: TObject);
var
  DC: HDC;
  RC: HGLRC;
  iPixelFormat: Integer;
  pfd: TPixelFormatDescriptor;
begin
  DC:= 0;
  RC:= 0;
  ZeroMemory (@pfd, SizeOf (pfd));
  pfd.nSize:= SizeOf (pfd);
  pfd.nVersion:= 1;
  pfd.dwFlags:=     PFD_DOUBLEBUFFER or PFD_DRAW_TO_WINDOW or
    PFD_SUPPORT_OPENGL or
    PFD_GENERIC_ACCELERATED;
pfd.iPixelType:= PFD_TYPE_RGBA; pfd.cColorBits:= 24;            
  pfd.cAlphaBits:= 8;             
  pfd.cDepthBits:= 24;            
  pfd.cStencilBits:= 8;           
  pfd.cAccumBits:= 24;            
  DC:= GetDC (Handle);	//1
iPixelFormat:= ChoosePixelFormat (DC, @pfd);		//2
   SetPixelFormat (DC, iPixelFormat, @pfd);	//3
   RC:= wglCreateContext (DC);//4
   wglMakeCurrent (DC, RC);//5

end;

procedure TForm1.FormDestroy(Sender: TObject);
var
  DC : HDC;
  RC : HGLRC;
begin
 RC := wglGetCurrentContext();
 DC := wglGetCurrentDC();
 wglMakeCurrent (0, 0);
 wglDeleteContext (RC);
 ReleaseDC (Handle, DC);
end;

procedure MyCube;
begin
   glBegin(GL_QUADS);
    glColor3f (1.0, 1.0, 1.0);
    glVertex2f (0.5, 0.5);	    //{1}
    glColor3f (0.0, 1.0, 0.0);
    glVertex2f (0.5, -0.5);	    //{2}
    glColor3f (0.0, 0.0, 1.0);
    glVertex2f (-0.5, -0.5);	  //{3}
    glColor3f (1.0, 0.0, 0.0);
    glVertex2f (-0.5, 0.5);	    //{4}
 glEnd;
end;

procedure TForm1.FormPaint(Sender: TObject);
begin
  glClearColor (0.0, 0.0, 0.0, 0.0);
  glClear (GL_COLOR_BUFFER_BIT);
  //glRotatef(45,0,0,1);
//  glTranslatef(0.5,0,0);
  glScalef(0.5,0.5,1);
  Mycube;
  glScalef(1/0.5, 1/0.5,1);
//  glTranslatef(-0.5,0,0);
  //glRotatef(-45,0,0,1);
  SwapBuffers (wglGetCurrentDC());
end;

end.
